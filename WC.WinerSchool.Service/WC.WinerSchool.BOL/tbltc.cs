//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace WC.WinerSchool.BOL
{
    [DataContract(IsReference = true)]
    public partial class tbltc: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> StudentId
        {
            get { return _studentId; }
            set
            {
                if (_studentId != value)
                {
                    _studentId = value;
                    OnPropertyChanged("StudentId");
                }
            }
        }
        private Nullable<int> _studentId;
    
        [DataMember]
        public string TcNumber
        {
            get { return _tcNumber; }
            set
            {
                if (_tcNumber != value)
                {
                    _tcNumber = value;
                    OnPropertyChanged("TcNumber");
                }
            }
        }
        private string _tcNumber;
    
        [DataMember]
        public string StudentName
        {
            get { return _studentName; }
            set
            {
                if (_studentName != value)
                {
                    _studentName = value;
                    OnPropertyChanged("StudentName");
                }
            }
        }
        private string _studentName;
    
        [DataMember]
        public string NameOFSchool
        {
            get { return _nameOFSchool; }
            set
            {
                if (_nameOFSchool != value)
                {
                    _nameOFSchool = value;
                    OnPropertyChanged("NameOFSchool");
                }
            }
        }
        private string _nameOFSchool;
    
        [DataMember]
        public string AdmissionNo
        {
            get { return _admissionNo; }
            set
            {
                if (_admissionNo != value)
                {
                    _admissionNo = value;
                    OnPropertyChanged("AdmissionNo");
                }
            }
        }
        private string _admissionNo;
    
        [DataMember]
        public string CumulativeRecNo
        {
            get { return _cumulativeRecNo; }
            set
            {
                if (_cumulativeRecNo != value)
                {
                    _cumulativeRecNo = value;
                    OnPropertyChanged("CumulativeRecNo");
                }
            }
        }
        private string _cumulativeRecNo;
    
        [DataMember]
        public string Sex
        {
            get { return _sex; }
            set
            {
                if (_sex != value)
                {
                    _sex = value;
                    OnPropertyChanged("Sex");
                }
            }
        }
        private string _sex;
    
        [DataMember]
        public string NameOfFather
        {
            get { return _nameOfFather; }
            set
            {
                if (_nameOfFather != value)
                {
                    _nameOfFather = value;
                    OnPropertyChanged("NameOfFather");
                }
            }
        }
        private string _nameOfFather;
    
        [DataMember]
        public string Nationality
        {
            get { return _nationality; }
            set
            {
                if (_nationality != value)
                {
                    _nationality = value;
                    OnPropertyChanged("Nationality");
                }
            }
        }
        private string _nationality;
    
        [DataMember]
        public string Religion
        {
            get { return _religion; }
            set
            {
                if (_religion != value)
                {
                    _religion = value;
                    OnPropertyChanged("Religion");
                }
            }
        }
        private string _religion;
    
        [DataMember]
        public string Cast
        {
            get { return _cast; }
            set
            {
                if (_cast != value)
                {
                    _cast = value;
                    OnPropertyChanged("Cast");
                }
            }
        }
        private string _cast;
    
        [DataMember]
        public string CasteType
        {
            get { return _casteType; }
            set
            {
                if (_casteType != value)
                {
                    _casteType = value;
                    OnPropertyChanged("CasteType");
                }
            }
        }
        private string _casteType;
    
        [DataMember]
        public Nullable<System.DateTime> Dob
        {
            get { return _dob; }
            set
            {
                if (_dob != value)
                {
                    _dob = value;
                    OnPropertyChanged("Dob");
                }
            }
        }
        private Nullable<System.DateTime> _dob;
    
        [DataMember]
        public string CurrStandard
        {
            get { return _currStandard; }
            set
            {
                if (_currStandard != value)
                {
                    _currStandard = value;
                    OnPropertyChanged("CurrStandard");
                }
            }
        }
        private string _currStandard;
    
        [DataMember]
        public string LangStudied
        {
            get { return _langStudied; }
            set
            {
                if (_langStudied != value)
                {
                    _langStudied = value;
                    OnPropertyChanged("LangStudied");
                }
            }
        }
        private string _langStudied;
    
        [DataMember]
        public string MediumOfIns
        {
            get { return _mediumOfIns; }
            set
            {
                if (_mediumOfIns != value)
                {
                    _mediumOfIns = value;
                    OnPropertyChanged("MediumOfIns");
                }
            }
        }
        private string _mediumOfIns;
    
        [DataMember]
        public string Syllabus
        {
            get { return _syllabus; }
            set
            {
                if (_syllabus != value)
                {
                    _syllabus = value;
                    OnPropertyChanged("Syllabus");
                }
            }
        }
        private string _syllabus;
    
        [DataMember]
        public string DateOfAdmission
        {
            get { return _dateOfAdmission; }
            set
            {
                if (_dateOfAdmission != value)
                {
                    _dateOfAdmission = value;
                    OnPropertyChanged("DateOfAdmission");
                }
            }
        }
        private string _dateOfAdmission;
    
        [DataMember]
        public string WhetherQualiForPromo
        {
            get { return _whetherQualiForPromo; }
            set
            {
                if (_whetherQualiForPromo != value)
                {
                    _whetherQualiForPromo = value;
                    OnPropertyChanged("WhetherQualiForPromo");
                }
            }
        }
        private string _whetherQualiForPromo;
    
        [DataMember]
        public string FeesDue
        {
            get { return _feesDue; }
            set
            {
                if (_feesDue != value)
                {
                    _feesDue = value;
                    OnPropertyChanged("FeesDue");
                }
            }
        }
        private string _feesDue;
    
        [DataMember]
        public string FeeConcessions
        {
            get { return _feeConcessions; }
            set
            {
                if (_feeConcessions != value)
                {
                    _feeConcessions = value;
                    OnPropertyChanged("FeeConcessions");
                }
            }
        }
        private string _feeConcessions;
    
        [DataMember]
        public string SCholarship
        {
            get { return _sCholarship; }
            set
            {
                if (_sCholarship != value)
                {
                    _sCholarship = value;
                    OnPropertyChanged("SCholarship");
                }
            }
        }
        private string _sCholarship;
    
        [DataMember]
        public string MedicalyExmnd
        {
            get { return _medicalyExmnd; }
            set
            {
                if (_medicalyExmnd != value)
                {
                    _medicalyExmnd = value;
                    OnPropertyChanged("MedicalyExmnd");
                }
            }
        }
        private string _medicalyExmnd;
    
        [DataMember]
        public Nullable<System.DateTime> LastAttendanceDate
        {
            get { return _lastAttendanceDate; }
            set
            {
                if (_lastAttendanceDate != value)
                {
                    _lastAttendanceDate = value;
                    OnPropertyChanged("LastAttendanceDate");
                }
            }
        }
        private Nullable<System.DateTime> _lastAttendanceDate;
    
        [DataMember]
        public Nullable<System.DateTime> AppForTcRecvedDate
        {
            get { return _appForTcRecvedDate; }
            set
            {
                if (_appForTcRecvedDate != value)
                {
                    _appForTcRecvedDate = value;
                    OnPropertyChanged("AppForTcRecvedDate");
                }
            }
        }
        private Nullable<System.DateTime> _appForTcRecvedDate;
    
        [DataMember]
        public Nullable<System.DateTime> DateOfIssueOfTC
        {
            get { return _dateOfIssueOfTC; }
            set
            {
                if (_dateOfIssueOfTC != value)
                {
                    _dateOfIssueOfTC = value;
                    OnPropertyChanged("DateOfIssueOfTC");
                }
            }
        }
        private Nullable<System.DateTime> _dateOfIssueOfTC;
    
        [DataMember]
        public string NoOfSchoolDays
        {
            get { return _noOfSchoolDays; }
            set
            {
                if (_noOfSchoolDays != value)
                {
                    _noOfSchoolDays = value;
                    OnPropertyChanged("NoOfSchoolDays");
                }
            }
        }
        private string _noOfSchoolDays;
    
        [DataMember]
        public string SchoolDaysAttended
        {
            get { return _schoolDaysAttended; }
            set
            {
                if (_schoolDaysAttended != value)
                {
                    _schoolDaysAttended = value;
                    OnPropertyChanged("SchoolDaysAttended");
                }
            }
        }
        private string _schoolDaysAttended;
    
        [DataMember]
        public string CharacterNConduct
        {
            get { return _characterNConduct; }
            set
            {
                if (_characterNConduct != value)
                {
                    _characterNConduct = value;
                    OnPropertyChanged("CharacterNConduct");
                }
            }
        }
        private string _characterNConduct;
    
        [DataMember]
        public Nullable<System.DateTime> CreationDate
        {
            get { return _creationDate; }
            set
            {
                if (_creationDate != value)
                {
                    _creationDate = value;
                    OnPropertyChanged("CreationDate");
                }
            }
        }
        private Nullable<System.DateTime> _creationDate;
    
        [DataMember]
        public Nullable<int> Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private Nullable<int> _status;
    
        [DataMember]
        public Nullable<int> LastBatchId
        {
            get { return _lastBatchId; }
            set
            {
                if (_lastBatchId != value)
                {
                    _lastBatchId = value;
                    OnPropertyChanged("LastBatchId");
                }
            }
        }
        private Nullable<int> _lastBatchId;
    
        [DataMember]
        public string NameOfMother
        {
            get { return _nameOfMother; }
            set
            {
                if (_nameOfMother != value)
                {
                    _nameOfMother = value;
                    OnPropertyChanged("NameOfMother");
                }
            }
        }
        private string _nameOfMother;
    
        [DataMember]
        public string ResAddress
        {
            get { return _resAddress; }
            set
            {
                if (_resAddress != value)
                {
                    _resAddress = value;
                    OnPropertyChanged("ResAddress");
                }
            }
        }
        private string _resAddress;
    
        [DataMember]
        public string ResonForLeaving
        {
            get { return _resonForLeaving; }
            set
            {
                if (_resonForLeaving != value)
                {
                    _resonForLeaving = value;
                    OnPropertyChanged("ResonForLeaving");
                }
            }
        }
        private string _resonForLeaving;
    
        [DataMember]
        public string SubjectStudied
        {
            get { return _subjectStudied; }
            set
            {
                if (_subjectStudied != value)
                {
                    _subjectStudied = value;
                    OnPropertyChanged("SubjectStudied");
                }
            }
        }
        private string _subjectStudied;
    
        [DataMember]
        public string LastExamDetails
        {
            get { return _lastExamDetails; }
            set
            {
                if (_lastExamDetails != value)
                {
                    _lastExamDetails = value;
                    OnPropertyChanged("LastExamDetails");
                }
            }
        }
        private string _lastExamDetails;
    
        [DataMember]
        public string NextClass
        {
            get { return _nextClass; }
            set
            {
                if (_nextClass != value)
                {
                    _nextClass = value;
                    OnPropertyChanged("NextClass");
                }
            }
        }
        private string _nextClass;
    
        [DataMember]
        public Nullable<System.DateTime> LastClassDate
        {
            get { return _lastClassDate; }
            set
            {
                if (_lastClassDate != value)
                {
                    _lastClassDate = value;
                    OnPropertyChanged("LastClassDate");
                }
            }
        }
        private Nullable<System.DateTime> _lastClassDate;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
