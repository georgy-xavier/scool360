//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace WC.WinerSchool.BOL
{
    [DataContract(IsReference = true)]
    public partial class tblstudent: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public string StudentName
        {
            get { return _studentName; }
            set
            {
                if (_studentName != value)
                {
                    _studentName = value;
                    OnPropertyChanged("StudentName");
                }
            }
        }
        private string _studentName;
    
        [DataMember]
        public string GardianName
        {
            get { return _gardianName; }
            set
            {
                if (_gardianName != value)
                {
                    _gardianName = value;
                    OnPropertyChanged("GardianName");
                }
            }
        }
        private string _gardianName;
    
        [DataMember]
        public string AdmitionNo
        {
            get { return _admitionNo; }
            set
            {
                if (_admitionNo != value)
                {
                    _admitionNo = value;
                    OnPropertyChanged("AdmitionNo");
                }
            }
        }
        private string _admitionNo;
    
        [DataMember]
        public Nullable<System.DateTime> DOB
        {
            get { return _dOB; }
            set
            {
                if (_dOB != value)
                {
                    _dOB = value;
                    OnPropertyChanged("DOB");
                }
            }
        }
        private Nullable<System.DateTime> _dOB;
    
        [DataMember]
        public string Sex
        {
            get { return _sex; }
            set
            {
                if (_sex != value)
                {
                    _sex = value;
                    OnPropertyChanged("Sex");
                }
            }
        }
        private string _sex;
    
        [DataMember]
        public string Address
        {
            get { return _address; }
            set
            {
                if (_address != value)
                {
                    _address = value;
                    OnPropertyChanged("Address");
                }
            }
        }
        private string _address;
    
        [DataMember]
        public Nullable<int> BloodGroup
        {
            get { return _bloodGroup; }
            set
            {
                if (_bloodGroup != value)
                {
                    _bloodGroup = value;
                    OnPropertyChanged("BloodGroup");
                }
            }
        }
        private Nullable<int> _bloodGroup;
    
        [DataMember]
        public Nullable<int> Religion
        {
            get { return _religion; }
            set
            {
                if (_religion != value)
                {
                    _religion = value;
                    OnPropertyChanged("Religion");
                }
            }
        }
        private Nullable<int> _religion;
    
        [DataMember]
        public Nullable<int> Cast
        {
            get { return _cast; }
            set
            {
                if (_cast != value)
                {
                    _cast = value;
                    OnPropertyChanged("Cast");
                }
            }
        }
        private Nullable<int> _cast;
    
        [DataMember]
        public Nullable<System.DateTime> DateofJoining
        {
            get { return _dateofJoining; }
            set
            {
                if (_dateofJoining != value)
                {
                    _dateofJoining = value;
                    OnPropertyChanged("DateofJoining");
                }
            }
        }
        private Nullable<System.DateTime> _dateofJoining;
    
        [DataMember]
        public Nullable<System.DateTime> DateOfLeaving
        {
            get { return _dateOfLeaving; }
            set
            {
                if (_dateOfLeaving != value)
                {
                    _dateOfLeaving = value;
                    OnPropertyChanged("DateOfLeaving");
                }
            }
        }
        private Nullable<System.DateTime> _dateOfLeaving;
    
        [DataMember]
        public Nullable<int> Status
        {
            get { return _status; }
            set
            {
                if (_status != value)
                {
                    _status = value;
                    OnPropertyChanged("Status");
                }
            }
        }
        private Nullable<int> _status;
    
        [DataMember]
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    _email = value;
                    OnPropertyChanged("Email");
                }
            }
        }
        private string _email;
    
        [DataMember]
        public string Location
        {
            get { return _location; }
            set
            {
                if (_location != value)
                {
                    _location = value;
                    OnPropertyChanged("Location");
                }
            }
        }
        private string _location;
    
        [DataMember]
        public Nullable<int> Pin
        {
            get { return _pin; }
            set
            {
                if (_pin != value)
                {
                    _pin = value;
                    OnPropertyChanged("Pin");
                }
            }
        }
        private Nullable<int> _pin;
    
        [DataMember]
        public string State
        {
            get { return _state; }
            set
            {
                if (_state != value)
                {
                    _state = value;
                    OnPropertyChanged("State");
                }
            }
        }
        private string _state;
    
        [DataMember]
        public string Nationality
        {
            get { return _nationality; }
            set
            {
                if (_nationality != value)
                {
                    _nationality = value;
                    OnPropertyChanged("Nationality");
                }
            }
        }
        private string _nationality;
    
        [DataMember]
        public string FatherEduQuali
        {
            get { return _fatherEduQuali; }
            set
            {
                if (_fatherEduQuali != value)
                {
                    _fatherEduQuali = value;
                    OnPropertyChanged("FatherEduQuali");
                }
            }
        }
        private string _fatherEduQuali;
    
        [DataMember]
        public string MothersName
        {
            get { return _mothersName; }
            set
            {
                if (_mothersName != value)
                {
                    _mothersName = value;
                    OnPropertyChanged("MothersName");
                }
            }
        }
        private string _mothersName;
    
        [DataMember]
        public string MotherEduQuali
        {
            get { return _motherEduQuali; }
            set
            {
                if (_motherEduQuali != value)
                {
                    _motherEduQuali = value;
                    OnPropertyChanged("MotherEduQuali");
                }
            }
        }
        private string _motherEduQuali;
    
        [DataMember]
        public string FatherOccupation
        {
            get { return _fatherOccupation; }
            set
            {
                if (_fatherOccupation != value)
                {
                    _fatherOccupation = value;
                    OnPropertyChanged("FatherOccupation");
                }
            }
        }
        private string _fatherOccupation;
    
        [DataMember]
        public Nullable<double> AnnualIncome
        {
            get { return _annualIncome; }
            set
            {
                if (_annualIncome != value)
                {
                    _annualIncome = value;
                    OnPropertyChanged("AnnualIncome");
                }
            }
        }
        private Nullable<double> _annualIncome;
    
        [DataMember]
        public Nullable<int> MotherTongue
        {
            get { return _motherTongue; }
            set
            {
                if (_motherTongue != value)
                {
                    _motherTongue = value;
                    OnPropertyChanged("MotherTongue");
                }
            }
        }
        private Nullable<int> _motherTongue;
    
        [DataMember]
        public string ResidencePhNo
        {
            get { return _residencePhNo; }
            set
            {
                if (_residencePhNo != value)
                {
                    _residencePhNo = value;
                    OnPropertyChanged("ResidencePhNo");
                }
            }
        }
        private string _residencePhNo;
    
        [DataMember]
        public string OfficePhNo
        {
            get { return _officePhNo; }
            set
            {
                if (_officePhNo != value)
                {
                    _officePhNo = value;
                    OnPropertyChanged("OfficePhNo");
                }
            }
        }
        private string _officePhNo;
    
        [DataMember]
        public Nullable<int> C1stLanguage
        {
            get { return _c1stLanguage; }
            set
            {
                if (_c1stLanguage != value)
                {
                    _c1stLanguage = value;
                    OnPropertyChanged("C1stLanguage");
                }
            }
        }
        private Nullable<int> _c1stLanguage;
    
        [DataMember]
        public Nullable<int> NumberofBrothers
        {
            get { return _numberofBrothers; }
            set
            {
                if (_numberofBrothers != value)
                {
                    _numberofBrothers = value;
                    OnPropertyChanged("NumberofBrothers");
                }
            }
        }
        private Nullable<int> _numberofBrothers;
    
        [DataMember]
        public Nullable<int> NumberOfSysters
        {
            get { return _numberOfSysters; }
            set
            {
                if (_numberOfSysters != value)
                {
                    _numberOfSysters = value;
                    OnPropertyChanged("NumberOfSysters");
                }
            }
        }
        private Nullable<int> _numberOfSysters;
    
        [DataMember]
        public Nullable<int> JoinBatch
        {
            get { return _joinBatch; }
            set
            {
                if (_joinBatch != value)
                {
                    _joinBatch = value;
                    OnPropertyChanged("JoinBatch");
                }
            }
        }
        private Nullable<int> _joinBatch;
    
        [DataMember]
        public string CreationTime
        {
            get { return _creationTime; }
            set
            {
                if (_creationTime != value)
                {
                    _creationTime = value;
                    OnPropertyChanged("CreationTime");
                }
            }
        }
        private string _creationTime;
    
        [DataMember]
        public string Addresspresent
        {
            get { return _addresspresent; }
            set
            {
                if (_addresspresent != value)
                {
                    _addresspresent = value;
                    OnPropertyChanged("Addresspresent");
                }
            }
        }
        private string _addresspresent;
    
        [DataMember]
        public Nullable<int> StudTypeId
        {
            get { return _studTypeId; }
            set
            {
                if (_studTypeId != value)
                {
                    _studTypeId = value;
                    OnPropertyChanged("StudTypeId");
                }
            }
        }
        private Nullable<int> _studTypeId;
    
        [DataMember]
        public Nullable<int> AdmissionTypeId
        {
            get { return _admissionTypeId; }
            set
            {
                if (_admissionTypeId != value)
                {
                    _admissionTypeId = value;
                    OnPropertyChanged("AdmissionTypeId");
                }
            }
        }
        private Nullable<int> _admissionTypeId;
    
        [DataMember]
        public string CreatedUserName
        {
            get { return _createdUserName; }
            set
            {
                if (_createdUserName != value)
                {
                    _createdUserName = value;
                    OnPropertyChanged("CreatedUserName");
                }
            }
        }
        private string _createdUserName;
    
        [DataMember]
        public string Comment
        {
            get { return _comment; }
            set
            {
                if (_comment != value)
                {
                    _comment = value;
                    OnPropertyChanged("Comment");
                }
            }
        }
        private string _comment;
    
        [DataMember]
        public Nullable<int> CanceledUser
        {
            get { return _canceledUser; }
            set
            {
                if (_canceledUser != value)
                {
                    _canceledUser = value;
                    OnPropertyChanged("CanceledUser");
                }
            }
        }
        private Nullable<int> _canceledUser;
    
        [DataMember]
        public string TempStudentId
        {
            get { return _tempStudentId; }
            set
            {
                if (_tempStudentId != value)
                {
                    _tempStudentId = value;
                    OnPropertyChanged("TempStudentId");
                }
            }
        }
        private string _tempStudentId;
    
        [DataMember]
        public Nullable<sbyte> UseBus
        {
            get { return _useBus; }
            set
            {
                if (_useBus != value)
                {
                    _useBus = value;
                    OnPropertyChanged("UseBus");
                }
            }
        }
        private Nullable<sbyte> _useBus;
    
        [DataMember]
        public Nullable<sbyte> UseHostel
        {
            get { return _useHostel; }
            set
            {
                if (_useHostel != value)
                {
                    _useHostel = value;
                    OnPropertyChanged("UseHostel");
                }
            }
        }
        private Nullable<sbyte> _useHostel;
    
        [DataMember]
        public Nullable<int> LastClassId
        {
            get { return _lastClassId; }
            set
            {
                if (_lastClassId != value)
                {
                    _lastClassId = value;
                    OnPropertyChanged("LastClassId");
                }
            }
        }
        private Nullable<int> _lastClassId;
    
        [DataMember]
        public Nullable<int> RollNo
        {
            get { return _rollNo; }
            set
            {
                if (_rollNo != value)
                {
                    _rollNo = value;
                    OnPropertyChanged("RollNo");
                }
            }
        }
        private Nullable<int> _rollNo;
    
        [DataMember]
        public Nullable<int> JoinStandard
        {
            get { return _joinStandard; }
            set
            {
                if (_joinStandard != value)
                {
                    _joinStandard = value;
                    OnPropertyChanged("JoinStandard");
                }
            }
        }
        private Nullable<int> _joinStandard;
    
        [DataMember]
        public string StudentId
        {
            get { return _studentId; }
            set
            {
                if (_studentId != value)
                {
                    _studentId = value;
                    OnPropertyChanged("StudentId");
                }
            }
        }
        private string _studentId;
    
        [DataMember]
        public Nullable<long> SyncDate
        {
            get { return _syncDate; }
            set
            {
                if (_syncDate != value)
                {
                    _syncDate = value;
                    OnPropertyChanged("SyncDate");
                }
            }
        }
        private Nullable<long> _syncDate;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
