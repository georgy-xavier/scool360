//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace WC.WinerSchool.BOL
{
    [DataContract(IsReference = true)]
    public partial class tblstudentmark: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int Id
        {
            get { return _id; }
            set
            {
                if (_id != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'Id' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _id = value;
                    OnPropertyChanged("Id");
                }
            }
        }
        private int _id;
    
        [DataMember]
        public Nullable<int> ExamSchId
        {
            get { return _examSchId; }
            set
            {
                if (_examSchId != value)
                {
                    _examSchId = value;
                    OnPropertyChanged("ExamSchId");
                }
            }
        }
        private Nullable<int> _examSchId;
    
        [DataMember]
        public Nullable<int> StudId
        {
            get { return _studId; }
            set
            {
                if (_studId != value)
                {
                    _studId = value;
                    OnPropertyChanged("StudId");
                }
            }
        }
        private Nullable<int> _studId;
    
        [DataMember]
        public Nullable<double> Mark1
        {
            get { return _mark1; }
            set
            {
                if (_mark1 != value)
                {
                    _mark1 = value;
                    OnPropertyChanged("Mark1");
                }
            }
        }
        private Nullable<double> _mark1;
    
        [DataMember]
        public Nullable<double> Mark2
        {
            get { return _mark2; }
            set
            {
                if (_mark2 != value)
                {
                    _mark2 = value;
                    OnPropertyChanged("Mark2");
                }
            }
        }
        private Nullable<double> _mark2;
    
        [DataMember]
        public Nullable<double> Mark3
        {
            get { return _mark3; }
            set
            {
                if (_mark3 != value)
                {
                    _mark3 = value;
                    OnPropertyChanged("Mark3");
                }
            }
        }
        private Nullable<double> _mark3;
    
        [DataMember]
        public Nullable<double> Mark4
        {
            get { return _mark4; }
            set
            {
                if (_mark4 != value)
                {
                    _mark4 = value;
                    OnPropertyChanged("Mark4");
                }
            }
        }
        private Nullable<double> _mark4;
    
        [DataMember]
        public Nullable<double> Mark5
        {
            get { return _mark5; }
            set
            {
                if (_mark5 != value)
                {
                    _mark5 = value;
                    OnPropertyChanged("Mark5");
                }
            }
        }
        private Nullable<double> _mark5;
    
        [DataMember]
        public Nullable<double> Mark6
        {
            get { return _mark6; }
            set
            {
                if (_mark6 != value)
                {
                    _mark6 = value;
                    OnPropertyChanged("Mark6");
                }
            }
        }
        private Nullable<double> _mark6;
    
        [DataMember]
        public Nullable<double> Mark7
        {
            get { return _mark7; }
            set
            {
                if (_mark7 != value)
                {
                    _mark7 = value;
                    OnPropertyChanged("Mark7");
                }
            }
        }
        private Nullable<double> _mark7;
    
        [DataMember]
        public Nullable<double> Mark8
        {
            get { return _mark8; }
            set
            {
                if (_mark8 != value)
                {
                    _mark8 = value;
                    OnPropertyChanged("Mark8");
                }
            }
        }
        private Nullable<double> _mark8;
    
        [DataMember]
        public Nullable<double> Mark9
        {
            get { return _mark9; }
            set
            {
                if (_mark9 != value)
                {
                    _mark9 = value;
                    OnPropertyChanged("Mark9");
                }
            }
        }
        private Nullable<double> _mark9;
    
        [DataMember]
        public Nullable<double> Mark10
        {
            get { return _mark10; }
            set
            {
                if (_mark10 != value)
                {
                    _mark10 = value;
                    OnPropertyChanged("Mark10");
                }
            }
        }
        private Nullable<double> _mark10;
    
        [DataMember]
        public Nullable<double> Mark11
        {
            get { return _mark11; }
            set
            {
                if (_mark11 != value)
                {
                    _mark11 = value;
                    OnPropertyChanged("Mark11");
                }
            }
        }
        private Nullable<double> _mark11;
    
        [DataMember]
        public Nullable<double> Mark12
        {
            get { return _mark12; }
            set
            {
                if (_mark12 != value)
                {
                    _mark12 = value;
                    OnPropertyChanged("Mark12");
                }
            }
        }
        private Nullable<double> _mark12;
    
        [DataMember]
        public Nullable<double> Mark13
        {
            get { return _mark13; }
            set
            {
                if (_mark13 != value)
                {
                    _mark13 = value;
                    OnPropertyChanged("Mark13");
                }
            }
        }
        private Nullable<double> _mark13;
    
        [DataMember]
        public Nullable<double> Mark14
        {
            get { return _mark14; }
            set
            {
                if (_mark14 != value)
                {
                    _mark14 = value;
                    OnPropertyChanged("Mark14");
                }
            }
        }
        private Nullable<double> _mark14;
    
        [DataMember]
        public Nullable<double> Mark15
        {
            get { return _mark15; }
            set
            {
                if (_mark15 != value)
                {
                    _mark15 = value;
                    OnPropertyChanged("Mark15");
                }
            }
        }
        private Nullable<double> _mark15;
    
        [DataMember]
        public Nullable<double> Mark16
        {
            get { return _mark16; }
            set
            {
                if (_mark16 != value)
                {
                    _mark16 = value;
                    OnPropertyChanged("Mark16");
                }
            }
        }
        private Nullable<double> _mark16;
    
        [DataMember]
        public Nullable<double> Mark17
        {
            get { return _mark17; }
            set
            {
                if (_mark17 != value)
                {
                    _mark17 = value;
                    OnPropertyChanged("Mark17");
                }
            }
        }
        private Nullable<double> _mark17;
    
        [DataMember]
        public Nullable<double> Mark18
        {
            get { return _mark18; }
            set
            {
                if (_mark18 != value)
                {
                    _mark18 = value;
                    OnPropertyChanged("Mark18");
                }
            }
        }
        private Nullable<double> _mark18;
    
        [DataMember]
        public Nullable<double> Mark19
        {
            get { return _mark19; }
            set
            {
                if (_mark19 != value)
                {
                    _mark19 = value;
                    OnPropertyChanged("Mark19");
                }
            }
        }
        private Nullable<double> _mark19;
    
        [DataMember]
        public Nullable<double> Mark20
        {
            get { return _mark20; }
            set
            {
                if (_mark20 != value)
                {
                    _mark20 = value;
                    OnPropertyChanged("Mark20");
                }
            }
        }
        private Nullable<double> _mark20;
    
        [DataMember]
        public Nullable<double> TotalMark
        {
            get { return _totalMark; }
            set
            {
                if (_totalMark != value)
                {
                    _totalMark = value;
                    OnPropertyChanged("TotalMark");
                }
            }
        }
        private Nullable<double> _totalMark;
    
        [DataMember]
        public Nullable<double> TotalMax
        {
            get { return _totalMax; }
            set
            {
                if (_totalMax != value)
                {
                    _totalMax = value;
                    OnPropertyChanged("TotalMax");
                }
            }
        }
        private Nullable<double> _totalMax;
    
        [DataMember]
        public Nullable<double> Avg
        {
            get { return _avg; }
            set
            {
                if (_avg != value)
                {
                    _avg = value;
                    OnPropertyChanged("Avg");
                }
            }
        }
        private Nullable<double> _avg;
    
        [DataMember]
        public string Grade
        {
            get { return _grade; }
            set
            {
                if (_grade != value)
                {
                    _grade = value;
                    OnPropertyChanged("Grade");
                }
            }
        }
        private string _grade;
    
        [DataMember]
        public string Result
        {
            get { return _result; }
            set
            {
                if (_result != value)
                {
                    _result = value;
                    OnPropertyChanged("Result");
                }
            }
        }
        private string _result;
    
        [DataMember]
        public Nullable<int> Rank
        {
            get { return _rank; }
            set
            {
                if (_rank != value)
                {
                    _rank = value;
                    OnPropertyChanged("Rank");
                }
            }
        }
        private Nullable<int> _rank;
    
        [DataMember]
        public string Remark
        {
            get { return _remark; }
            set
            {
                if (_remark != value)
                {
                    _remark = value;
                    OnPropertyChanged("Remark");
                }
            }
        }
        private string _remark;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
