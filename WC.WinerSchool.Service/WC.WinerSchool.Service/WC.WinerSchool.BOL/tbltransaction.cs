//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Globalization;
using System.Runtime.Serialization;

namespace WC.WinerSchool.BOL
{
    [DataContract(IsReference = true)]
    public partial class tbltransaction: IObjectWithChangeTracker, INotifyPropertyChanged
    {
        #region Primitive Properties
    
        [DataMember]
        public int TransationId
        {
            get { return _transationId; }
            set
            {
                if (_transationId != value)
                {
                    if (ChangeTracker.ChangeTrackingEnabled && ChangeTracker.State != ObjectState.Added)
                    {
                        throw new InvalidOperationException("The property 'TransationId' is part of the object's key and cannot be changed. Changes to key properties can only be made when the object is not being tracked or is in the Added state.");
                    }
                    _transationId = value;
                    OnPropertyChanged("TransationId");
                }
            }
        }
        private int _transationId;
    
        [DataMember]
        public Nullable<int> UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    _userId = value;
                    OnPropertyChanged("UserId");
                }
            }
        }
        private Nullable<int> _userId;
    
        [DataMember]
        public int PaymentElementId
        {
            get { return _paymentElementId; }
            set
            {
                if (_paymentElementId != value)
                {
                    _paymentElementId = value;
                    OnPropertyChanged("PaymentElementId");
                }
            }
        }
        private int _paymentElementId;
    
        [DataMember]
        public string BillNo
        {
            get { return _billNo; }
            set
            {
                if (_billNo != value)
                {
                    _billNo = value;
                    OnPropertyChanged("BillNo");
                }
            }
        }
        private string _billNo;
    
        [DataMember]
        public Nullable<System.DateTime> PaidDate
        {
            get { return _paidDate; }
            set
            {
                if (_paidDate != value)
                {
                    _paidDate = value;
                    OnPropertyChanged("PaidDate");
                }
            }
        }
        private Nullable<System.DateTime> _paidDate;
    
        [DataMember]
        public double Amount
        {
            get { return _amount; }
            set
            {
                if (_amount != value)
                {
                    _amount = value;
                    OnPropertyChanged("Amount");
                }
            }
        }
        private double _amount;
    
        [DataMember]
        public Nullable<int> AccountTo
        {
            get { return _accountTo; }
            set
            {
                if (_accountTo != value)
                {
                    _accountTo = value;
                    OnPropertyChanged("AccountTo");
                }
            }
        }
        private Nullable<int> _accountTo;
    
        [DataMember]
        public Nullable<int> AccountFrom
        {
            get { return _accountFrom; }
            set
            {
                if (_accountFrom != value)
                {
                    _accountFrom = value;
                    OnPropertyChanged("AccountFrom");
                }
            }
        }
        private Nullable<int> _accountFrom;
    
        [DataMember]
        public string Type
        {
            get { return _type; }
            set
            {
                if (_type != value)
                {
                    _type = value;
                    OnPropertyChanged("Type");
                }
            }
        }
        private string _type;
    
        [DataMember]
        public Nullable<sbyte> TransType
        {
            get { return _transType; }
            set
            {
                if (_transType != value)
                {
                    _transType = value;
                    OnPropertyChanged("TransType");
                }
            }
        }
        private Nullable<sbyte> _transType;
    
        [DataMember]
        public Nullable<sbyte> Canceled
        {
            get { return _canceled; }
            set
            {
                if (_canceled != value)
                {
                    _canceled = value;
                    OnPropertyChanged("Canceled");
                }
            }
        }
        private Nullable<sbyte> _canceled;
    
        [DataMember]
        public Nullable<double> BalanceAmount
        {
            get { return _balanceAmount; }
            set
            {
                if (_balanceAmount != value)
                {
                    _balanceAmount = value;
                    OnPropertyChanged("BalanceAmount");
                }
            }
        }
        private Nullable<double> _balanceAmount;
    
        [DataMember]
        public Nullable<sbyte> RegularFee
        {
            get { return _regularFee; }
            set
            {
                if (_regularFee != value)
                {
                    _regularFee = value;
                    OnPropertyChanged("RegularFee");
                }
            }
        }
        private Nullable<sbyte> _regularFee;
    
        [DataMember]
        public Nullable<int> BatchId
        {
            get { return _batchId; }
            set
            {
                if (_batchId != value)
                {
                    _batchId = value;
                    OnPropertyChanged("BatchId");
                }
            }
        }
        private Nullable<int> _batchId;
    
        [DataMember]
        public Nullable<int> ClassId
        {
            get { return _classId; }
            set
            {
                if (_classId != value)
                {
                    _classId = value;
                    OnPropertyChanged("ClassId");
                }
            }
        }
        private Nullable<int> _classId;
    
        [DataMember]
        public string StudentName
        {
            get { return _studentName; }
            set
            {
                if (_studentName != value)
                {
                    _studentName = value;
                    OnPropertyChanged("StudentName");
                }
            }
        }
        private string _studentName;
    
        [DataMember]
        public string CollectedUser
        {
            get { return _collectedUser; }
            set
            {
                if (_collectedUser != value)
                {
                    _collectedUser = value;
                    OnPropertyChanged("CollectedUser");
                }
            }
        }
        private string _collectedUser;
    
        [DataMember]
        public Nullable<sbyte> CollectionType
        {
            get { return _collectionType; }
            set
            {
                if (_collectionType != value)
                {
                    _collectionType = value;
                    OnPropertyChanged("CollectionType");
                }
            }
        }
        private Nullable<sbyte> _collectionType;
    
        [DataMember]
        public string FeeName
        {
            get { return _feeName; }
            set
            {
                if (_feeName != value)
                {
                    _feeName = value;
                    OnPropertyChanged("FeeName");
                }
            }
        }
        private string _feeName;
    
        [DataMember]
        public string PeriodName
        {
            get { return _periodName; }
            set
            {
                if (_periodName != value)
                {
                    _periodName = value;
                    OnPropertyChanged("PeriodName");
                }
            }
        }
        private string _periodName;
    
        [DataMember]
        public string TempId
        {
            get { return _tempId; }
            set
            {
                if (_tempId != value)
                {
                    _tempId = value;
                    OnPropertyChanged("TempId");
                }
            }
        }
        private string _tempId;
    
        [DataMember]
        public Nullable<int> PeriodId
        {
            get { return _periodId; }
            set
            {
                if (_periodId != value)
                {
                    _periodId = value;
                    OnPropertyChanged("PeriodId");
                }
            }
        }
        private Nullable<int> _periodId;
    
        [DataMember]
        public Nullable<int> FeeId
        {
            get { return _feeId; }
            set
            {
                if (_feeId != value)
                {
                    _feeId = value;
                    OnPropertyChanged("FeeId");
                }
            }
        }
        private Nullable<int> _feeId;

        #endregion
        #region ChangeTracking
    
        protected virtual void OnPropertyChanged(String propertyName)
        {
            if (ChangeTracker.State != ObjectState.Added && ChangeTracker.State != ObjectState.Deleted)
            {
                ChangeTracker.State = ObjectState.Modified;
            }
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        protected virtual void OnNavigationPropertyChanged(String propertyName)
        {
            if (_propertyChanged != null)
            {
                _propertyChanged(this, new PropertyChangedEventArgs(propertyName));
            }
        }
    
        event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged{ add { _propertyChanged += value; } remove { _propertyChanged -= value; } }
        private event PropertyChangedEventHandler _propertyChanged;
        private ObjectChangeTracker _changeTracker;
    
        [DataMember]
        public ObjectChangeTracker ChangeTracker
        {
            get
            {
                if (_changeTracker == null)
                {
                    _changeTracker = new ObjectChangeTracker();
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
                return _changeTracker;
            }
            set
            {
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging -= HandleObjectStateChanging;
                }
                _changeTracker = value;
                if(_changeTracker != null)
                {
                    _changeTracker.ObjectStateChanging += HandleObjectStateChanging;
                }
            }
        }
    
        private void HandleObjectStateChanging(object sender, ObjectStateChangingEventArgs e)
        {
            if (e.NewState == ObjectState.Deleted)
            {
                ClearNavigationProperties();
            }
        }
    
        protected bool IsDeserializing { get; private set; }
    
        [OnDeserializing]
        public void OnDeserializingMethod(StreamingContext context)
        {
            IsDeserializing = true;
        }
    
        [OnDeserialized]
        public void OnDeserializedMethod(StreamingContext context)
        {
            IsDeserializing = false;
            ChangeTracker.ChangeTrackingEnabled = true;
        }
    
        protected virtual void ClearNavigationProperties()
        {
        }

        #endregion
    }
}
