!function (t, e, i) { function o() { var t = this; t.id = null, t.busy = !1, t.start = function (e, i) { t.busy || (t.stop(), t.id = setTimeout(function () { e(), t.id = null, t.busy = !1 }, i), t.busy = !0) }, t.stop = function () { null != t.id && (clearTimeout(t.id), t.id = null, t.busy = !1) } } function a(i, a, n) { var r = this; r.id = n, r.table = i, r.options = a, r.breakpoints = [], r.breakpointNames = "", r.columns = {}; var d = r.options, l = d.classes; return r.timers = { resize: new o, register: function (t) { return r.timers[t] = new o, r.timers[t] } }, e.footable.plugins.init(r), r.init = function () { var i = t(e), o = t(r.table); if (o.hasClass(l.loaded)) return void r.raise("footable_already_initialized"); o.addClass(l.loading), o.find("> thead > tr > th, > thead > tr > td").each(function () { var t = r.getColumnData(this); r.columns[t.index] = t; var e = t.index + 1, i = o.find("> tbody > tr > td:nth-child(" + e + ")"); null != t.className && i.not(".footable-cell-detail").addClass(t.className) }); for (var a in d.breakpoints) r.breakpoints.push({ name: a, width: d.breakpoints[a] }), r.breakpointNames += a + " "; r.breakpoints.sort(function (t, e) { return t.width - e.width }), r.bindToggleSelectors(), r.raise("footable_initializing"), o.bind("footable_initialized", function (t) { r.resize(), o.removeClass(l.loading), o.find('[data-init="hide"]').hide(), o.find('[data-init="show"]').show(), o.addClass(l.loaded) }), i.bind("resize.footable", function () { r.timers.resize.stop(), r.timers.resize.start(function () { r.raise("footable_resizing"), r.resize(), r.raise("footable_resized") }, d.delay) }), r.raise("footable_initialized") }, r.bindToggleSelectors = function () { var e = t(r.table); e.find(d.toggleSelector).unbind("click.footable").bind("click.footable", function (i) { if (e.is(".breakpoint")) { var o = t(this).is("tr") ? t(this) : t(this).parents("tr:first"); r.toggleDetail(o.get(0)) } }) }, r.parse = function (t, e) { var i = d.parsers[e.type] || d.parsers.alpha; return i(t) }, r.getColumnData = function (e) { var i = t(e), o = i.data("hide"); o = o || "", o = o.split(","); var a = { index: i.index(), hide: {}, type: i.data("type") || "alpha", name: i.data("name") || t.trim(i.text()), ignore: i.data("ignore") || !1, className: i.data("class") || null }; a.hide["default"] = "all" === i.data("hide") || t.inArray("default", o) >= 0; for (var n in d.breakpoints) a.hide[n] = "all" === i.data("hide") || t.inArray(n, o) >= 0; var l = r.raise("footable_column_data", { column: { data: a, th: e } }); return l.column.data }, r.getViewportWidth = function () { return window.innerWidth || (document.body ? document.body.offsetWidth : 0) }, r.getViewportHeight = function () { return window.innerHeight || (document.body ? document.body.offsetHeight : 0) }, r.hasBreakpointColumn = function (t) { for (var e in r.columns) if (r.columns[e].hide[t]) return !0; return !1 }, r.resize = function () { var e = t(r.table), i = { width: e.width(), height: e.height(), viewportWidth: r.getViewportWidth(), viewportHeight: r.getViewportHeight(), orientation: null }; i.orientation = i.viewportWidth > i.viewportHeight ? "landscape" : "portrait", i.viewportWidth < i.width && (i.width = i.viewportWidth), i.viewportHeight < i.height && (i.height = i.viewportHeight); var o = e.data("footable_info"); if (e.data("footable_info", i), !o || o && o.width && o.width != i.width || o && o.height && o.height != i.height) { for (var a, n = null, d = 0; d < r.breakpoints.length; d++) if (a = r.breakpoints[d], a && a.width && i.width <= a.width) { n = a; break } var l = null == n ? "default" : n.name, s = r.hasBreakpointColumn(l); e.removeClass("default breakpoint").removeClass(r.breakpointNames).addClass(l + (s ? " breakpoint" : "")).find("> thead > tr > th").each(function () { var i = r.columns[t(this).index()], o = i.index + 1, a = e.find("> tbody > tr > td:nth-child(" + o + "), > tfoot > tr > td:nth-child(" + o + "), > colgroup > col:nth-child(" + o + ")").add(this); 0 == i.hide[l] ? a.show() : a.hide() }).end().find("> tbody > tr.footable-detail-show").each(function () { r.createOrUpdateDetailRow(this) }), e.find("> tbody > tr.footable-detail-show:visible").each(function () { var e = t(this).next(); e.hasClass("footable-row-detail") && ("default" != l || s ? e.show() : e.hide()) }), r.raise("footable_breakpoint_" + l, { info: i }) } }, r.toggleDetail = function (e) { var i = t(e), o = r.createOrUpdateDetailRow(i.get(0)), a = i.next(); !o && a.is(":visible") ? (i.removeClass("footable-detail-show"), a.hide()) : (i.addClass("footable-detail-show"), a.show()) }, r.createOrUpdateDetailRow = function (e) { var i, o = t(e), a = o.next(), n = []; if (!o.is(":hidden")) { o.find("> td:hidden").each(function () { var e = r.columns[t(this).index()]; return 1 == e.ignore ? !0 : void n.push({ name: e.name, value: r.parse(this, e), display: t.trim(t(this).html()) }) }); var l = o.find("> td:visible").length, s = a.hasClass("footable-row-detail"); return s || (a = t('<tr class="footable-row-detail"><td class="footable-cell-detail"><div class="footable-row-detail-inner"></div></td></tr>'), o.after(a)), a.find("> td:first").attr("colspan", l), i = a.find(".footable-row-detail-inner").empty(), d.createDetail(i, n), !s } }, r.raise = function (e, i) { i = i || {}; var o = { ft: r }; t.extend(!0, o, i); var a = t.Event(e, o); return a.ft || t.extend(!0, a, o), t(r.table).trigger(a), a }, r.init(), r } e.footable = { options: { delay: 100, breakpoints: { phone: 480, tablet: 1024 }, parsers: { alpha: function (e) { return t(e).data("value") || t.trim(t(e).text()) } }, toggleSelector: " > tbody > tr:not(.footable-row-detail)", createDetail: function (t, e) { for (var i = 0; i < e.length; i++) t.append("<div><strong>" + e[i].name + "</strong> : " + e[i].display + "</div>") }, classes: { loading: "footable-loading", loaded: "footable-loaded", sorted: "footable-sorted", descending: "footable-sorted-desc", indicator: "footable-sort-indicator" }, debug: !1 }, version: { major: 0, minor: 1, toString: function () { return e.footable.version.major + "." + e.footable.version.minor }, parse: function (t) { return version = /(\d+)\.?(\d+)?\.?(\d+)?/.exec(t), { major: parseInt(version[1]) || 0, minor: parseInt(version[2]) || 0, patch: parseInt(version[3]) || 0 } } }, plugins: { _validate: function (i) { return "string" != typeof i.name ? (1 == e.footable.options.debug && console.error('Validation failed, plugin does not implement a string property called "name".', i), !1) : t.isFunction(i.init) ? (1 == e.footable.options.debug && console.log('Validation succeeded for plugin "' + i.name + '".', i), !0) : (1 == e.footable.options.debug && console.error('Validation failed, plugin "' + i.name + '" does not implement a function called "init".', i), !1) }, registered: [], register: function (o, a) { e.footable.plugins._validate(o) && (e.footable.plugins.registered.push(o), a != i && "object" == typeof a && t.extend(!0, e.footable.options, a), 1 == e.footable.options.debug && console.log('Plugin "' + o.name + '" has been registered with the Foobox.', o)) }, init: function (t) { for (var i = 0; i < e.footable.plugins.registered.length; i++) try { e.footable.plugins.registered[i].init(t) } catch (o) { 1 == e.footable.options.debug && console.error(o) } } } }; var n = 0; t.fn.footable = function (i) { i = i || {}; var o = t.extend(!0, {}, e.footable.options, i); return this.each(function () { n++, this.footable = new a(this, o, n) }) } }(jQuery, window);